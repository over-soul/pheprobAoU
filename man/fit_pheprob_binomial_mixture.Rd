% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binomial_mixture.R
\name{fit_pheprob_binomial_mixture}
\alias{fit_pheprob_binomial_mixture}
\title{Fit Binomial Mixture Model for PheProb}
\usage{
fit_pheprob_binomial_mixture(
  S,
  C,
  max_iterations = 1000,
  convergence_threshold = 1e-06,
  verbose = TRUE,
  init_method = "random",
  regularization = 1e-08
)
}
\arguments{
\item{S}{Integer vector of disease-relevant billing code counts}

\item{C}{Integer vector of total billing code counts (must be >= S)}

\item{max_iterations}{Maximum number of EM iterations (default: 1000)}

\item{convergence_threshold}{Convergence threshold for log-likelihood (default: 1e-6)}

\item{verbose}{Logical indicating whether to print progress (default: TRUE)}

\item{init_method}{Initialization method: "random", "kmeans", or "manual" (default: "random")}

\item{regularization}{Small value added to prevent numerical issues (default: 1e-8)}
}
\value{
A list containing:
\item{parameters}{List with p_1, p_0, alpha_0, alpha_1}
\item{phenotype_probabilities}{Vector of P(Y=1|S,C) for each patient}
\item{posterior_probabilities}{Matrix of component probabilities}
\item{log_likelihood}{Final log-likelihood}
\item{log_likelihood_history}{Vector of log-likelihood values by iteration}
\item{n_iterations}{Number of iterations until convergence}
\item{convergence}{Logical indicating convergence}
\item{model_diagnostics}{List with convergence diagnostics}
}
\description{
Implements the original PheProb algorithm using a binomial mixture model with
healthcare utilization adjustment. The model assumes 2 latent classes (cases Y=1,
controls Y=0) where disease-relevant code counts S follow binomial distributions
conditional on total code counts C.
}
\details{
The model specification is:
\deqn{P(S = s | C = c, Y = y) = \binom{c}{s} p_y^s (1-p_y)^{c-s}}
\deqn{\phi(c) = \text{logistic}(\alpha_0 + \alpha_1 \cdot c)}
\deqn{P(Y = 1 | S = s, C = c) = \frac{\phi(c) \cdot P(S|C,Y=1)}{\phi(c) \cdot P(S|C,Y=1) + (1-\phi(c)) \cdot P(S|C,Y=0)}}
}
\examples{
\dontrun{
# Simulate data
n <- 1000
C <- rpois(n, lambda = 20) + 1  # Total codes
true_status <- rbinom(n, 1, 0.3)  # True case status
S <- rbinom(n, C, ifelse(true_status == 1, 0.4, 0.1))  # Relevant codes

# Fit model
model <- fit_pheprob_binomial_mixture(S, C)

# Extract probabilities
probs <- model$phenotype_probabilities
}

}
